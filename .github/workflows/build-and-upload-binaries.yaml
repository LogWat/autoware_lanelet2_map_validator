name: static-build-and-upload-binaries

on:
  workflow_dispatch:
    inputs:
      tag-name:
        description: The name of the tag to build and upload binaries for
        type: string
        required: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y curl gnupg lsb-release ca-certificates
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list

          sudo apt-get update
          sudo apt-get install -y \
            ros-humble-ros-base \
            git build-essential cmake \
            libboost-all-dev \
            nlohmann-json3-dev libyaml-cpp-dev libgeographic-dev libpugixml-dev libeigen3-dev \
            librange-v3-dev \
            python3-colcon-common-extensions python3-ament-package \
            ros-humble-mrt-cmake-modules \
            ros-humble-geographic-msgs ros-humble-unique-identifier-msgs \
            ros-humble-rosidl-typesupport-c ros-humble-rosidl-typesupport-cpp \
            ros-humble-tf2 ros-humble-tf2-geometry-msgs ros-humble-visualization-msgs
          sudo rm -rf /var/lib/apt/lists/*

      - name: Build Lanelet2 (static, loop style)
        run: |
          set -e
          source /opt/ros/humble/setup.bash
          git clone https://github.com/fzi-forschungszentrum-informatik/lanelet2.git
          cd lanelet2
          git checkout 1.2.2
          mkdir -p build install
          cd build
          for pkg in lanelet2_core lanelet2_io lanelet2_projection lanelet2_traffic_rules lanelet2_routing lanelet2_validation; do
            echo "==== Building $pkg ===="
            mkdir -p $pkg
            cd $pkg
            if [ -d ../../install/share/lanelet2_core ]; then
              export CMAKE_PREFIX_PATH="$(realpath ../../install):/opt/ros/humble:${CMAKE_PREFIX_PATH}"
              export AMENT_PREFIX_PATH="$(realpath ../../install):${AMENT_PREFIX_PATH}"
            else
              export CMAKE_PREFIX_PATH="/opt/ros/humble"
            fi
            cmake ../../$pkg \
              -DCMAKE_PREFIX_PATH="${CMAKE_PREFIX_PATH}" \
              -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_CXX_STANDARD=17 \
              -DCMAKE_CXX_FLAGS="-fPIC" \
              -DBUILD_SHARED_LIBS=OFF \
              -DBUILD_TESTING=OFF \
              -DCMAKE_INSTALL_PREFIX=../../install
            make -j$(nproc)
            make install
            cd ..
          done

      - name: Build autoware_map_msgs only
        run: |
          set -e
          source /opt/ros/humble/setup.bash
          mkdir -p autoware_ws/src
          cd autoware_ws/src
          git clone https://github.com/autowarefoundation/autoware_msgs.git
          cd ..
          colcon build --cmake-args -DBUILD_TESTING=OFF --packages-select autoware_map_msgs

      - name: Build fmt (static)
        run: |
          set -e
          git clone https://github.com/fmtlib/fmt.git
          cd fmt
          mkdir -p build temp_install
          cd build
          cmake .. \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=17 \
            -DCMAKE_CXX_FLAGS="-fPIC" \
            -DBUILD_SHARED_LIBS=OFF \
            -DCMAKE_INSTALL_PREFIX=../temp_install
          make -j$(nproc)
          make install

      - name: Build autoware_lanelet2_extension (static lib)
        run: |
          set -e
          source /opt/ros/humble/setup.bash
          git clone https://github.com/autowarefoundation/autoware_lanelet2_extension.git
          cp lanelet2_extension_CMakeLists.txt autoware_lanelet2_extension/autoware_lanelet2_extension/CMakeLists.txt
          cd autoware_lanelet2_extension/autoware_lanelet2_extension
          mkdir -p build
          cd build
          export CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/lanelet2/install:$GITHUB_WORKSPACE/autoware_ws/install:$GITHUB_WORKSPACE/fmt/temp_install:/opt/ros/humble"
          cmake .. -C "$GITHUB_WORKSPACE/lanelet2_extension_CMakeLists.txt" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=OFF \
            -DLANELET2_INSTALL_DIR="$GITHUB_WORKSPACE/lanelet2/install" \
            -DFMT_INSTALL_DIR="$GITHUB_WORKSPACE/fmt/temp_install"
          make -j$(nproc)
          make install

      - name: Build validator (static exe)
        id: build_validator
        run: |
          set -e
          source /opt/ros/humble/setup.bash
          cd autoware_lanelet2_map_validator
          mkdir -p build
          cd build
          export CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/autoware_ws/install:$GITHUB_WORKSPACE/lanelet2/install:$GITHUB_WORKSPACE/fmt/temp_install:/opt/ros/humble"
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=OFF \
            -DLANELET2_INSTALL_DIR="$GITHUB_WORKSPACE/lanelet2/install" \
            -DFMT_INSTALL_DIR="$GITHUB_WORKSPACE/fmt/temp_install" \
            -DAUTOWARE_LANELET2_EXTENSION_DIR="$GITHUB_WORKSPACE/autoware_lanelet2_extension/autoware_lanelet2_extension"
          make -j$(nproc)
          make install
          BIN=install/lib/autoware_lanelet2_map_validator/autoware_lanelet2_map_validator
          ls -l $BIN
          echo "artifact=$(realpath $BIN)" >> $GITHUB_OUTPUT

      - name: Package artifact
        run: |
          mkdir -p dist
          cp "${{ steps.build_validator.outputs.artifact }}" dist/
          strip dist/autoware_lanelet2_map_validator || true
          sha256sum dist/autoware_lanelet2_map_validator > dist/SHA256SUMS
          cat dist/SHA256SUMS

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: autoware-lanelet2-map-validator
          path: dist
          retention-days: 14

      - name: Prepare tag
        id: tag
        run: |
          if [ -n "${{ github.event.inputs.tag_suffix }}" ]; then
            TAG="validator-static-${{ github.event.inputs.tag_suffix }}"
          else
            TAG="validator-static-$(date -u +%Y%m%d%H%M)"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create Release
        if: ${{ github.event.inputs.release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            dist/autoware_lanelet2_map_validator
            dist/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "Tag: ${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "Release: ${{ github.event.inputs.release }}" >> $GITHUB_STEP_SUMMARY
          echo "Binary path (artifact): dist/autoware_lanelet2_map_validator" >> $GITHUB_STEP_SUMMARY